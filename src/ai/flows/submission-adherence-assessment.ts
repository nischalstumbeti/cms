// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for assessing the adherence of contest submissions to a given prompt or theme.
 *
 * It includes:
 * - `assessSubmissionAdherence`: An exported function that initiates the assessment process.
 * - `SubmissionAdherenceInput`: The input type for the `assessSubmissionAdherence` function, including the submission file URI and the prompt text.
 * - `SubmissionAdherenceOutput`: The output type for the `assessSubmissionAdherence` function, providing an adherence score and a rationale.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SubmissionAdherenceInputSchema = z.object({
  submissionDataUri: z
    .string()
    .describe(
      'The contest submission, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' 
    ),
  promptText: z.string().describe('The prompt or theme text for the contest.'),
});
export type SubmissionAdherenceInput = z.infer<typeof SubmissionAdherenceInputSchema>;

const SubmissionAdherenceOutputSchema = z.object({
  adherenceScore: z
    .number()
    .describe('A score (0-1) indicating the degree of adherence to the prompt.'),
  rationale: z
    .string()
    .describe('The reasoning behind the adherence score, explaining why the submission adheres or does not adhere to the prompt.'),
});
export type SubmissionAdherenceOutput = z.infer<typeof SubmissionAdherenceOutputSchema>;

export async function assessSubmissionAdherence(
  input: SubmissionAdherenceInput
): Promise<SubmissionAdherenceOutput> {
  return submissionAdherenceAssessmentFlow(input);
}

const submissionAdherencePrompt = ai.definePrompt({
  name: 'submissionAdherencePrompt',
  input: {schema: SubmissionAdherenceInputSchema},
  output: {schema: SubmissionAdherenceOutputSchema},
  prompt: `You are an expert contest judge assessing the adherence of submissions to a given prompt.

  Evaluate the submission based on the following prompt:
  {{promptText}}

  Provide an adherence score between 0 and 1 (inclusive), where 0 indicates no adherence and 1 indicates perfect adherence.

  Also, provide a rationale for the assigned score, explaining your reasoning.

  The submission is provided below:
  {{media url=submissionDataUri}}`,
});

const submissionAdherenceAssessmentFlow = ai.defineFlow(
  {
    name: 'submissionAdherenceAssessmentFlow',
    inputSchema: SubmissionAdherenceInputSchema,
    outputSchema: SubmissionAdherenceOutputSchema,
  },
  async input => {
    const {output} = await submissionAdherencePrompt(input);
    return output!;
  }
);
